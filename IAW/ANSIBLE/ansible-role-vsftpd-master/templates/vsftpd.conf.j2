# {{ ansible_managed }}

###
# General
###

# When "listen" directive is enabled, vsftpd runs in standalone mode and
# listens on IPv4 sockets. This directive cannot be used in conjunction
# with the listen_ipv6 directive.
listen=YES
{% if vsftpd_ssl_implicit == true and vsftpd_ssl_enabled == true %}
listen_port=990
{% endif %}

# This directive enables listening on IPv6 sockets. By default, listening
# on the IPv6 "any" address (::) will accept connections from both IPv6
# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6
# sockets. If you want that (perhaps because you want to listen on specific
# addresses) then you must run two copies of vsftpd with two configuration
# files.
# Make sure, that one of the listen options is commented !!
listen_ipv6=NO

# Uncomment this to allow local users to log in.
# When SELinux is enforcing check for SE bool ftp_home_dir
{% if vsftpd_enable_local_users == true or vsftpd_enable_virt_users == true %}
local_enable=YES
{% else %}
local_enable=NO
{% endif %}

# This powerful option allows the override of any config option specified in the manual page, 
# on a per-user basis. Usage is simple, and is best illustrated with an example. 
# If you set user_config_dir to be /etc/vsftpd_user_conf and then log on as the user "chris", 
# then vsftpd will apply the settings in the file /etc/vsftpd_user_conf/chris for the duration 
# of the session.
{% if vsftpd_systemd_service_name == 'vsftpd' %}
user_config_dir=/etc/vsftpd/users.d/
{% else %}
user_config_dir=/etc/vsftpd/{{ vsftpd_systemd_service_name }}/users.d/
{% endif %}

# If enabled, all non-anonymous logins are classed as "guest" logins. 
# A guest login is remapped to the user specified in the guest_username setting.
{% if vsftpd_enable_virt_users == true %}
guest_enable=YES
{% if vsftpd_guest_username is defined %}
guest_username={{ vsftpd_guest_username }}
{% endif %}
{% else %}
guest_enable=NO
{% endif %}

# Uncomment this to enable any form of FTP write command.
write_enable=YES

# Default umask for local users is 077. You may wish to change this to 022,
# if your users expect that (022 is used by most other ftpd's)
local_umask=022

# Activate directory messages - messages given to remote users when they
# go into a certain directory.
dirmessage_enable=NO

# Activate logging
xferlog_enable=YES
log_ftp_protocol=YES
dual_log_enable=YES
syslog_enable=YES

# If you want, you can have your log file in standard ftpd xferlog format.
# Note that the default log file location is /var/log/xferlog in this case.
xferlog_std_format=YES

# Make sure PORT transfer connections originate from port 20 (ftp-data).
connect_from_port_20=YES

# You may change the default value for timing out an idle session.
idle_session_timeout=300

# You may change the default value for timing out a data connection.
data_connection_timeout=120

# You may fully customise the login banner string:
{% if vsftpd_ftp_banner %}
ftpd_banner={{ vsftpd_ftp_banner }}
{% else %}
ftpd_banner=Private FTP server
{% endif %}

# Passive connections
pasv_enable=YES
pasv_promiscuous=NO
{% if vsftpd_passive_min_port and vsftpd_passive_max_port %}
pasv_min_port={{ vsftpd_passive_min_port }}
pasv_max_port={{ vsftpd_passive_max_port }}
{% endif %}
{% if vsftpd_passive_address %}
pasv_address={{ vsftpd_passive_address }}
{% endif %}
port_enable=YES


###
# Anonymous part
###

# Allow anonymous FTP? (Beware - allowed by default if you comment this out).
anonymous_enable=NO

# Uncomment this to allow the anonymous FTP user to upload files. This only
# has an effect if the above global write enable is activated. Also, you will
# obviously need to create a directory writable by the FTP user.
# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access
anon_upload_enable=NO

# Uncomment this if you want the anonymous FTP user to be able to create
# new directories.
anon_mkdir_write_enable=NO


###
# Chrooting
###

# You may specify an explicit list of local users to chroot() to their home
# directory. If chroot_local_user is YES, then this list becomes a list of
# users to NOT chroot().
# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that
# the user does not have write access to the top level directory within the
# chroot)
{% if vsftpd_chroot_local_users == true %}
chroot_local_user=YES
{% else %}
chroot_local_user=NO
{% endif %}

{% if vsftpd_allow_writeable_chroot == true %}
allow_writeable_chroot=YES
{% else %}
allow_writeable_chroot=NO
{% endif %}

###
# Auth
###
{% if vsftpd_enable_local_users == true and vsftpd_systemd_service_name == 'vsftpd' %}
pam_service_name=vsftpd
{% elif vsftpd_enable_local_users == true and vsftpd_systemd_service_name != 'vsftpd' %}
pam_service_name={{ vsftpd_systemd_service_name }}
{% endif %}

###
# Security / SSL part
###

# Enable SSL
{% if vsftpd_ssl_enabled == true %}
ssl_enable=YES
{% if vsftpd_ssl_implicit == true %}
implicit_ssl=YES
{% endif %}
ssl_tlsv1=YES
ssl_sslv2=NO
ssl_sslv3=NO
ssl_ciphers=HIGH

force_local_data_ssl=YES
force_local_logins_ssl=YES

rsa_cert_file={{ vsftpd_ssl_certificate }}
rsa_private_key_file={{ vsftpd_ssl_privkey }}
{% else %}
ssl_enable=NO
{% endif %}
seccomp_sandbox=NO
